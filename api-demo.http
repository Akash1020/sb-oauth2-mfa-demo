# Health check

GET http://localhost:8080/actuator/health

> {%
  client.test("Health check", function() {
    client.assert(response.status === 200, "Response status is 200");
  });
%}
###

# Obtain a short-living token for OTP

POST http://localhost:8080/oauth/token
Authorization: Basic client secret
Content-Type: application/x-www-form-urlencoded

grant_type=phone&scope=otp&phone_number=123456789

> {%
  var otpToken = response.body.otp_token;
  client.global.set("otpToken", otpToken);

  client.test("Obtain a short-living token for OTP", function() {
    client.assert(response.status === 403, "Response status is 403");
  });
%}

###

# Exchange OTP for a regular tokens

POST http://localhost:8080/oauth/token
Authorization: Basic client secret
Content-Type: application/x-www-form-urlencoded

grant_type=otp&otp=166050&scope=api&otp_token={{otpToken}}

> {%
  var accessToken = response.body.access_token;
  client.global.set("accessToken", accessToken);
  var refreshToken = response.body.refresh_token;
  client.global.set("refreshToken", refreshToken);

  client.test("Exchange OTP for regular tokens", function() {
    client.assert(response.status === 200, "Response status is 200");
  });
%}

###

# Get some resources

GET http://localhost:8080/api/resources
Authorization: Bearer {{accessToken}}
Accept: application/json

> {%
  client.test("Get some resources", function() {
    client.assert(response.status === 200, "Response status is 200");
  });
%}

###

# Refresh regular tokens

POST http://localhost:8080/oauth/token
Authorization: Basic client secret
Content-Type: application/x-www-form-urlencoded

grant_type=refresh_token&scope=api&refresh_token={{refreshToken}}

> {%
  var accessToken = response.body.access_token;
  client.global.set("accessToken", accessToken);
  var refreshToken = response.body.refresh_token;
  client.global.set("refreshToken", refreshToken);

  client.test("Refresh regular tokens", function() {
    client.assert(response.status === 200, "Response status is 200");
  });
%}

###

# Trying to get a regular token in the usual way should not work

POST http://localhost:8080/oauth/token
Authorization: Basic client secret
Content-Type: application/x-www-form-urlencoded

grant_type=password&username=user&password=123456&scope=api

> {%
client.test("Can't get a regular access token in the usual way", function() {
  client.assert(response.status === 401, "Response status is 401");
});
%}

###